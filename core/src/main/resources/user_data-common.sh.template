hostname $(hostname).ec2.internal

mkdir /root/.aws

cat << EOF > /root/.aws/config
[default]
region = %AWS_REGION%
EOF

aws ec2 create-tags --resources $(curl -s http://169.254.169.254/latest/meta-data/instance-id) \
  --tags Key=Name,Value="%NAME_TAG_VALUE%" \
         Key=%CLUSTER_ID_TAG_KEY%,Value=%CLUSTER_ID_TAG_VALUE% \
         Key=%LEGACY_CLUSTER_ID_TAG_KEY%,Value=%CLUSTER_ID_TAG_VALUE% \
         Key=%OWNER_TAG_KEY%,Value="%OWNER_TAG_VALUE%" \
         Key=%SPARK_ROLE_TAG_KEY%,Value=%SPARK_ROLE_TAG_VALUE%

/usr/bin/time yum -y update 2> /tmp/yum_update_time.txt

curl https://amazon-ssm-us-east-1.s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o /tmp/amazon-ssm-agent.rpm
yum install -y /tmp/amazon-ssm-agent.rpm

curl -fsSL https://get.docker.com/ | sh

cat << EOF > /root/.dockercfg
{
  "https://index.docker.io/v1/": {
    "auth": "%DOCKER_AUTH%",
    "email": "%DOCKER_EMAIL%"
  }
}
EOF

stop_script=/sbin/stop-spark-container.sh

cat << EOF > $stop_script
#!/bin/bash

instance_id=\$(curl -s http://169.254.169.254/latest/meta-data/instance-id)

if [ \$(docker ps -f name=spark -q | wc -l) -eq 1 ]; then
  aws ec2 create-tags --resources \$instance_id --tags Key=%CONTAINER_STATE_TAG_KEY%,Value=%CONTAINER_STOPPING_STATE_TAG_VALUE%
  docker stop spark
fi

if [ \$(docker ps -f name=spark -q -a | wc -l) -eq 1 ]; then
  docker rm spark
fi

aws ec2 delete-tags --resources \$instance_id --tags Key=%DOCKER_IMAGE_TAG_KEY%
aws ec2 create-tags --resources \$instance_id --tags Key=%CONTAINER_STATE_TAG_KEY%,Value=%CONTAINER_STOPPED_STATE_TAG_VALUE%
EOF

chmod 755 $stop_script

echo "fs.file-max = 100000" >> /etc/sysctl.conf
sysctl -p

service docker start

start_script=/sbin/start-spark-container.sh

cat << EOF > $start_script
#!/bin/bash

if [ \$# -eq 1 ]; then
  image=\$1
else
  image=%DOCKER_IMAGE_TAG_VALUE%
fi

instance_id=\$(curl -s http://169.254.169.254/latest/meta-data/instance-id)

aws ec2 create-tags --resources \$instance_id \
  --tags Key=%DOCKER_IMAGE_TAG_KEY%,Value=\$image \
         Key=%CONTAINER_STATE_TAG_KEY%,Value=%CONTAINER_PENDING_STATE_TAG_VALUE%
/usr/bin/time docker pull \$image 2> /tmp/docker_pull_time.txt

EOF
